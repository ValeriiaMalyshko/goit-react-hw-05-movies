{"version":3,"file":"static/js/166.c71d8f1c.chunk.js","mappings":"uOAIe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,SACjCD,IACFE,EAAAA,EAAAA,IAAaF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,SAqB9D,OACE,+BACE,kBAAMC,SAfW,SAAAC,GACnBA,EAAEC,iBACF,IAAMP,EAAcR,EAAMgB,OAAOC,oBAEb,KAAhBT,GAIJF,EAAgB,CAAEN,MAAOQ,KAEzBE,EAAAA,EAAAA,IAAaF,GAAaG,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBT,EAAUS,OALxDM,MAAM,gCAUN,WACE,kBACEC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,cACZC,MAAOvB,EACPwB,SA1Ba,SAAAV,GACnBb,EAASa,EAAEW,cAAcF,MAAMG,mBA2B3B,mBAAQP,KAAK,SAAb,UACE,0CAGHjB,IACC,wBACGA,EAAOyB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKF,GAAb,SAAoBC,KADbD,a,0MCjDrBG,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,oBAAqB,CAAEG,OAAAA,IALjD,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAe7B,IAAtB,4CAAO,OAAP,oBAAO,2GAA4BF,EAA5B,+BAA0C,GACzC0B,EAAS,CACbC,QAASH,EACThC,MAAOQ,GAHJ,kBAMoBuB,GAAAA,CAAM,gBAAiB,CAAEG,OAAAA,IAN7C,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAAqBZ,EAArB,+BAA0B,GACzBM,EAAS,CACbC,QAASH,EACTS,SAAUb,GAHP,kBAMoBG,GAAAA,CAAM,UAAD,OAAWH,GAAM,CAAEM,OAAAA,IAN5C,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bd,EAA5B,+BAAiC,GAChCM,EAAS,CACbC,QAASH,EACTS,SAAUb,GAHP,kBAMoBG,GAAAA,CAAM,UAAD,OAAWH,EAAX,YAAyB,CAAEM,OAAAA,IANpD,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bf,EAA5B,+BAAiC,GAChCM,EAAS,CACbC,QAASH,EACTS,SAAUb,GAHP,kBAMoBG,GAAAA,CAAM,UAAD,OAAWH,EAAX,YAAyB,CAAEM,OAAAA,IANpD,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG","sources":["components/Movies/Movies.js","services/API.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport { MoviesSearch } from 'services/API';\n\nexport default function Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchQuery = searchParams.get('query');\n    if (searchQuery) {\n      MoviesSearch(searchQuery).then(({ results }) => setMovies(results));\n    }\n  });\n\n  const handleChange = e => {\n    setQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchQuery = query.trim().toLocaleLowerCase();\n\n    if (searchQuery === '') {\n      alert('Please, enter a movie title');\n      return;\n    }\n    setSearchParams({ query: searchQuery });\n\n    MoviesSearch(searchQuery).then(({ results }) => setMovies(results));\n  };\n\n  return (\n    <header>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search film\"\n          value={query}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(({ id, title }) => (\n            <li key={id}>\n              <Link to={`${id}`}>{title}</Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </header>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '044cb4a395576b2afeda8b70ead6e0f2';\n\nexport async function MoviesList() {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`/trending/all/day`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MoviesSearch(searchQuery = '') {\n  const params = {\n    api_key: KEY,\n    query: searchQuery,\n  };\n  try {\n    const response = await axios('/search/movie', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function Movie(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MovieCredits(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}/credits`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MovieReviews(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}/reviews`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Movies","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","useEffect","searchQuery","get","MoviesSearch","then","results","onSubmit","e","preventDefault","trim","toLocaleLowerCase","alert","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","map","id","title","to","axios","KEY","MoviesList","params","api_key","response","data","console","error","Movie","movie_id","MovieCredits","MovieReviews"],"sourceRoot":""}