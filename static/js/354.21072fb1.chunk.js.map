{"version":3,"file":"static/js/354.21072fb1.chunk.js","mappings":"iPAIMA,GAAUC,EAAAA,EAAAA,OAAK,kBAAM,iCACrBC,GAAOD,EAAAA,EAAAA,OAAK,kBAAM,iCAET,SAASE,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAKA,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAMN,GAASO,KAAKH,KACnB,CAACJ,IAEAG,EAAO,CACT,IAAQK,EAAuDL,EAAvDK,YAAaC,EAA0CN,EAA1CM,OAAQC,EAAkCP,EAAlCO,MAAOC,EAA2BR,EAA3BQ,SAAUC,EAAiBT,EAAjBS,aAExCC,EAAU,yCAAqCL,GACrD,OACE,4BACE,0BACE,gBAAKM,IAAKD,EAAYE,IAAKL,OAE7B,0BACGA,EADH,KACYE,EADZ,QAGA,sCACA,uBAAID,KACJ,oCACA,uBACGF,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,4BAAkBA,EAAlB,MAAWA,SAGf,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,oCAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACxB,EAAD,CAAMyB,GAAIvB,OACtC,SAAC,KAAD,CAAOqB,KAAK,UAAUC,SAAS,SAAC1B,EAAD,CAAS2B,GAAIvB,aA3BxCA,M,0MClBhBwB,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EAAS,CACbC,QAASH,GAFN,kBAKoBD,GAAAA,CAAM,oBAAqB,CAAEG,OAAAA,IALjD,cAKGE,EALH,yBAMIA,EAASC,MANb,gCAQHC,QAAQC,MAAR,MARG,gFAYA,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2GAA4BC,EAA5B,+BAA0C,GACzCP,EAAS,CACbC,QAASH,EACTU,MAAOD,GAHJ,kBAMoBV,GAAAA,CAAM,gBAAiB,CAAEG,OAAAA,IAN7C,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAe1B,IAAtB,4CAAO,OAAP,oBAAO,2GAAqBiB,EAArB,+BAA0B,GACzBI,EAAS,CACbC,QAASH,EACTW,SAAUb,GAHP,kBAMoBC,GAAAA,CAAM,UAAD,OAAWD,GAAM,CAAEI,OAAAA,IAN5C,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeK,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bd,EAA5B,+BAAiC,GAChCI,EAAS,CACbC,QAASH,EACTW,SAAUb,GAHP,kBAMoBC,GAAAA,CAAM,UAAD,OAAWD,EAAX,YAAyB,CAAEI,OAAAA,IANpD,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG,iFAaA,SAAeM,IAAtB,4CAAO,OAAP,oBAAO,2GAA4Bf,EAA5B,+BAAiC,GAChCI,EAAS,CACbC,QAASH,EACTW,SAAUb,GAHP,kBAMoBC,GAAAA,CAAM,UAAD,OAAWD,EAAX,YAAyB,CAAEI,OAAAA,IANpD,cAMGE,EANH,yBAOIA,EAASC,MAPb,gCASHC,QAAQC,MAAR,MATG","sources":["components/MovieDetails/MovieDetails.js","services/API.js"],"sourcesContent":["import React, { useState, useEffect, lazy, Suspense } from 'react';\nimport { Link, useParams, Routes, Route } from 'react-router-dom';\nimport { Movie } from 'services/API';\n\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\nconst Cast = lazy(() => import('../Cast/Cast'));\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState(null);\n  useEffect(() => {\n    Movie(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (movie) {\n    const { poster_path, genres, title, overview, release_date } = movie;\n\n    const pictureUrl = `https://image.tmdb.org/t/p/w500${poster_path}`;\n    return (\n      <div key={movieId}>\n        <div>\n          <img src={pictureUrl} alt={title} />\n        </div>\n        <h5>\n          {title} ({release_date})\n        </h5>\n        <h5>Overview</h5>\n        <p>{overview}</p>\n        <h5>Genres</h5>\n        <p>\n          {genres.map(({ name }) => (\n            <span key={name}>{name} </span>\n          ))}\n        </p>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<h1>Loading</h1>}>\n          <Routes>\n            <Route path=\"cast\" element={<Cast id={movieId} />} />\n            <Route path=\"reviews\" element={<Reviews id={movieId} />} />\n          </Routes>\n        </Suspense>\n      </div>\n    );\n  }\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst KEY = '044cb4a395576b2afeda8b70ead6e0f2';\n\nexport async function MoviesList() {\n  const params = {\n    api_key: KEY,\n  };\n  try {\n    const response = await axios(`/trending/all/day`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MoviesSearch(searchQuery = '') {\n  const params = {\n    api_key: KEY,\n    query: searchQuery,\n  };\n  try {\n    const response = await axios('/search/movie', { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function Movie(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MovieCredits(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}/credits`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport async function MovieReviews(id = '') {\n  const params = {\n    api_key: KEY,\n    movie_id: id,\n  };\n  try {\n    const response = await axios(`/movie/${id}/reviews`, { params });\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n}\n"],"names":["Reviews","lazy","Cast","MovieDetails","movieId","useParams","useState","movie","setMovie","useEffect","Movie","then","poster_path","genres","title","overview","release_date","pictureUrl","src","alt","map","name","to","Suspense","fallback","path","element","id","axios","KEY","MoviesList","params","api_key","response","data","console","error","MoviesSearch","searchQuery","query","movie_id","MovieCredits","MovieReviews"],"sourceRoot":""}