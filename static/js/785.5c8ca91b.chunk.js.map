{"version":3,"file":"static/js/785.5c8ca91b.chunk.js","mappings":"8NAIe,SAASA,EAAT,GAA0B,IAAPC,EAAM,EAANA,GAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAAIM,MAAK,gBAAGC,EAAH,EAAGA,QAAH,OAAiBJ,EAAWI,QACjD,CAACP,IACAE,EAAQM,OAAS,GAEjB,wBACGN,EAAQO,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGX,SAQR","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { MovieReviews } from 'services/API';\n\nexport default function Reviews({ id }) {\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    MovieReviews(id).then(({ results }) => setReviews(results));\n  }, [id]);\n  if (reviews.length > 0) {\n    return (\n      <ul>\n        {reviews.map(({ id, author, content }) => (\n          <li key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  } else {\n    return <p>We don't have any reviews for this movie.</p>;\n  }\n}\n\nReviews.propTypes = {\n  id: propTypes.string.isRequired,\n};\n"],"names":["Reviews","id","useState","reviews","setReviews","useEffect","MovieReviews","then","results","length","map","author","content"],"sourceRoot":""}